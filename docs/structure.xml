<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="IPM DB API Documentation">
  <file path="ipm.class.db.php" hash="16bfcb3b90d3d307d7298cce4a8849c7" package="Default">
    <include line="2" type="Require Once" package="Default">
      <name>ipm.interface.db.plugin.php</name>
    </include>
    <include line="3" type="Require Once" package="Default">
      <name>ipm.class.db.engine.php</name>
    </include>
    <constant namespace="global" line="173" package="Default">
      <name>$engine</name>
      <full_name>\$engine</full_name>
      <value>$this-&gt;getdb() . "." . $tablename</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="20" package="IPM\Core\System\Database">
      <extends>\IPM_db_engine</extends>
      <name>IPM_db</name>
      <full_name>\IPM_db</full_name>
      <docblock line="15">
        <description>IPM Master Database Class</description>
        <long-description></long-description>
        <tag line="15" name="package" description="IPM\Core\System\Database"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$conn</name>
        <default></default>
        <docblock line="21">
          <description>Database connection identifier</description>
          <long-description></long-description>
          <tag line="21" name="type" description="resource"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$errno</name>
        <default>0</default>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
          <tag line="27" name="var" description="Error number returned from latest query" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$error</name>
        <default>""</default>
        <docblock line="33">
          <description>Error string returned form latest query</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$affected_rows</name>
        <default>0</default>
        <docblock line="39">
          <description>The number of rows affected by the last update query</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="49" namespace="global" package="Default">
        <name>$num_rows</name>
        <default>0</default>
        <docblock line="45">
          <description>The row count of the last select statement</description>
          <long-description></long-description>
          <tag line="45" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="55" namespace="global" package="Default">
        <name>$insert_id</name>
        <default>0</default>
        <docblock line="51">
          <description>The auto incremeted ID generated by the last insert query</description>
          <long-description></long-description>
          <tag line="51" name="var" description="" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$lastid</name>
        <default>0</default>
        <docblock line="57">
          <description>Alias of &lt;i&gt;$insert_id&lt;/i&gt;, deprecated use &lt;i&gt;$insert_id&lt;/i&gt; instead</description>
          <long-description></long-description>
          <tag line="57" name="var" description="" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="57" name="deprecated" description="use &lt;i&gt;$insert_id&lt;/i&gt; instead"/>
          <tag line="57" name="legacy" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="global" package="Default">
        <name>$ex</name>
        <default>array()</default>
        <docblock line="65">
          <description>An array that keeps track of query locations in the query history</description>
          <long-description></long-description>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="75" namespace="global" package="Default">
        <name>$tbEngines</name>
        <default>array()</default>
        <docblock line="71">
          <description>Table engine list array</description>
          <long-description></long-description>
          <tag line="71" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" namespace="global" package="Default">
        <name>$registerArray</name>
        <default>array()</default>
        <docblock line="77">
          <description>Table registration array</description>
          <long-description></long-description>
          <tag line="77" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="global" package="Default">
        <name>$dbTables</name>
        <default>array()</default>
        <docblock line="83">
          <description>Table details array.</description>
          <long-description>&lt;p&gt;This array is populated from a cache file and is
required for table registration.&lt;/p&gt;</long-description>
          <tag line="83" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="95" namespace="global" package="Default">
        <name>$autoCreateStructure</name>
        <default>true</default>
        <docblock line="90">
          <description>Flag to automatically create the table structure cache file.</description>
          <long-description>&lt;p&gt;If on,
the table structure cache file will be created at the registered interval&lt;/p&gt;</long-description>
          <tag line="90" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="102" namespace="global" package="Default">
        <name>$autoCreateIntervalHours</name>
        <default>1</default>
        <docblock line="97">
          <description>The number of hours until the table structure cache file is automatcially
recreated.</description>
          <long-description>&lt;p&gt;The time is based on the file timestamp.&lt;/p&gt;</long-description>
          <tag line="97" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" namespace="global" package="Default">
        <name>$tableStructureCacheFile</name>
        <default>"ipm.class.db.tables.cfg"</default>
        <docblock line="104">
          <description>The filename for the table structure cache file</description>
          <long-description></long-description>
          <tag line="104" name="var" description="" type="\stirng">
            <type by_reference="false">\stirng</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="114" namespace="global" package="Default">
        <name>$registrationFile</name>
        <default>"ipm.class.db.registration.cfg"</default>
        <docblock line="110">
          <description>The filename for the table registration information</description>
          <long-description></long-description>
          <tag line="110" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="122" namespace="global" package="Default">
        <name>$regDbConfig</name>
        <default>array("value" =&gt; "value", "table" =&gt; TABLE_CONFIG, "id" =&gt; array("field" =&gt; "varname", "value" =&gt; "DB_REGISTRATION"))</default>
        <docblock line="116">
          <description>Registration database configration array, used when the file does not exist.</description>
          <long-description>&lt;p&gt;Will always attempt to load the database when the file is missing or
&lt;i&gt;$regUsing&lt;/i&gt; is set to database.&lt;/p&gt;</long-description>
          <tag line="116" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="133" namespace="global" package="Default">
        <name>$regUsing</name>
        <default>"file"</default>
        <docblock line="128">
          <description>Determines if the registration should use the &lt;i&gt;database&lt;/i&gt; or &lt;i&gt;file&lt;/i&gt;,
defaults to &lt;i&gt;file&lt;/i&gt;.</description>
          <long-description></long-description>
          <tag line="128" name="var" description="" type="\type">
            <type by_reference="false">\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="135" package="IPM\Core\System\Database">
        <name>IS_SET</name>
        <full_name>IS_SET</full_name>
        <argument line="135">
          <name>$flag</name>
          <default></default>
          <type/>
        </argument>
        <argument line="135">
          <name>$bit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="136" package="IPM\Core\System\Database">
        <name>SET_BIT</name>
        <full_name>SET_BIT</full_name>
        <argument line="136">
          <name>$var</name>
          <default></default>
          <type/>
        </argument>
        <argument line="136">
          <name>$bit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="137" package="IPM\Core\System\Database">
        <name>REMOVE_BIT</name>
        <full_name>REMOVE_BIT</full_name>
        <argument line="137">
          <name>$var</name>
          <default></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$bit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="138" package="IPM\Core\System\Database">
        <name>TOGGLE_BIT</name>
        <full_name>TOGGLE_BIT</full_name>
        <argument line="138">
          <name>$var</name>
          <default></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$bit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="IPM\Core\System\Database">
        <name>getStructure</name>
        <full_name>getStructure</full_name>
        <docblock line="153">
          <description>Returns the structure of a table</description>
          <long-description></long-description>
          <tag line="153" name="param" description="(Optional) The name of the table" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="return" description="An array with table structure, if a table name is not provided,&#13;&#10;all table structures will be returned." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$table</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="171" package="IPM\Core\System\Database">
        <name>createEngine</name>
        <full_name>createEngine</full_name>
        <docblock line="164">
          <description>Creates a table engine instance
A table engine instance is an instance of this database class, with limited
functionality, that performs actions only on the table the engine is for</description>
          <long-description></long-description>
          <tag line="164" name="param" description="Name of the engine" type="string" variable="$engine">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="Name of the table, used for creating a table constant" type="string" variable="$tablename">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$engine</name>
          <default></default>
          <type/>
        </argument>
        <argument line="171">
          <name>$tablename</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="IPM\Core\System\Database">
        <name>createTableStructureCache</name>
        <full_name>createTableStructureCache</full_name>
        <docblock line="182">
          <description>Creates the table structure cache file</description>
          <long-description></long-description>
          <tag line="182" name="return" description="True if the file was created" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="223" package="IPM\Core\System\Database">
        <name>loadTableStructure</name>
        <full_name>loadTableStructure</full_name>
        <docblock line="220">
          <description>Loads the table structure cache into the dbTables array</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="IPM\Core\System\Database">
        <name>loadRegistration</name>
        <full_name>loadRegistration</full_name>
        <docblock line="244">
          <description>Loads the table registration.</description>
          <long-description>&lt;p&gt;All tables are given a table engine
instance&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="288" package="IPM\Core\System\Database">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="281">
          <description>Registers a table with the system</description>
          <long-description></long-description>
          <tag line="281" name="param" description="Name of the table referenced, use as the engine name and table name constant" type="string" variable="$engine">
            <type by_reference="false">string</type>
          </tag>
          <tag line="281" name="param" description="Name of the table as it appears in the database" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="281" name="param" description="Table creation query, if specified, will execute the query to attempt to create a new table" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="281" name="todo" description="Add functionality for creating the new table"/>
        </docblock>
        <argument line="288">
          <name>$engine</name>
          <default></default>
          <type/>
        </argument>
        <argument line="288">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="288">
          <name>$query</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="309" package="IPM\Core\System\Database">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="309">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="323" package="IPM\Core\System\Database">
        <name>isRegistered</name>
        <full_name>isRegistered</full_name>
        <docblock line="316">
          <description>Determine if a table is already registered</description>
          <long-description></long-description>
          <tag line="316" name="param" description="Name of the table, registered name or database table name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="316" name="param" description="(Optional) does nothing" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="316" name="return" description="True if the table is registered" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="316" name="todo" description="Either impliment table param or remove it"/>
        </docblock>
        <argument line="323">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="323">
          <name>$type</name>
          <default>"table"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="350" package="IPM\Core\System\Database">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="333">
          <description>Submits an SQL statement to the database
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="333" name="param" description="Query to execute" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="333" name="param" description="Values to replace the tokens with or custom callback&#13;&#10;function, see the &lt;u&gt;$callback&lt;/u&gt; parameter for detauls on closures.  If&#13;&#10;a closure is passed instead of a token array, the &lt;u&gt;$callback&lt;/u&gt; parameter&#13;&#10;will not be processed." type="Mixed" variable="$tokens">
            <type by_reference="false">Mixed</type>
          </tag>
          <tag line="333" name="param" description="Custom callback function.  Callbacks are passed&#13;&#10;the following parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;results&lt;/b&gt; An array containing the results of the query&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;query&lt;/b&gt; An object containing the defaults of the query&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="\Closure" variable="$closure">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="333" name="param" description="(Optional) A parameter to pass into the callback.&#13;&#10;Note: parameter pass by reference." type="mixed" variable="$closureParams">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="333" name="return" description="Array of the result set or the return of a passed callback" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="350">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="350">
          <name>$tokens</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="350">
          <name>$closure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="350">
          <name>$closureParams</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="373" package="IPM\Core\System\Database">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="365">
          <description>Returns the results of the last successfully executed SQL statement
&lt;p&gt;Note: table engine instances cannot return the MySQL result resource,
only the result array is allowed to be retrieved&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="365" name="param" description="(Optional) Type of results to return (array or resource),&#13;&#10;defaults to resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="365" name="return" description="MySQL result resource or array" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="373">
          <name>$type</name>
          <default>"resource"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="383" package="IPM\Core\System\Database">
        <name>setdb</name>
        <full_name>setdb</full_name>
        <docblock line="377">
          <description>Sets the current database as active, loads table defaults, and loads
table registeration</description>
          <long-description></long-description>
          <tag line="377" name="param" description="Database name" type="String" variable="$db">
            <type by_reference="false">String</type>
          </tag>
          <tag line="377" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$db</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="400" package="IPM\Core\System\Database">
        <name>getlastID</name>
        <full_name>getlastID</full_name>
        <docblock line="393">
          <description>Alias of &lt;i&gt;insert_id&lt;/i&gt;, deprecated use &lt;i&gt;$insert_id&lt;/i&gt; property instead</description>
          <long-description></long-description>
          <tag line="393" name="return" description="Insert ID" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="393" name="see" description="\$insert_id" refers="\$insert_id"/>
          <tag line="393" name="deprecated" description="use &lt;i&gt;$insert_id&lt;/i&gt; property instead"/>
          <tag line="393" name="legacy" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="409" package="IPM\Core\System\Database">
        <name>rowcount</name>
        <full_name>rowcount</full_name>
        <docblock line="402">
          <description>Alias of &lt;i&gt;num_rows()&lt;/i&gt;, deprecated use &lt;i&gt;$num_rows&lt;/i&gt; property instead</description>
          <long-description></long-description>
          <tag line="402" name="return" description="The count" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="402" name="see" description="\$num_rows" refers="\$num_rows"/>
          <tag line="402" name="deprecated" description="use &lt;i&gt;$num_rows&lt;/i&gt; property instead"/>
          <tag line="402" name="legacy" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="418" package="IPM\Core\System\Database">
        <name>lasterror</name>
        <full_name>lasterror</full_name>
        <docblock line="411">
          <description>Alias of &lt;i&gt;error()&lt;/i&gt;, deprecated use &lt;i&gt;$error&lt;/i&gt; property instead</description>
          <long-description></long-description>
          <tag line="411" name="return" description="Error code, 0 if no error" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="411" name="see" description="\$error" refers="\$error"/>
          <tag line="411" name="deprecated" description="use &lt;i&gt;$error&lt;/i&gt; property instead"/>
          <tag line="411" name="legacy" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="428" package="IPM\Core\System\Database">
        <name>resreset</name>
        <full_name>resreset</full_name>
        <docblock line="420">
          <description>Alias of &lt;i&gt;reset()&lt;/i&gt;, deprecated use &lt;i&gt;reset()&lt;/i&gt; instead</description>
          <long-description></long-description>
          <tag line="420" name="param" description="(Optional) Position in the result set to reset to, defaults to 0" type="Integer" variable="$pointer">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="420" name="return" description="True on success, MySQL error number on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="420" name="see" description="\reset()" refers="\reset()"/>
          <tag line="420" name="deprecated" description="use &lt;i&gt;reset()&lt;/i&gt; instead"/>
          <tag line="420" name="legacy" description=""/>
        </docblock>
        <argument line="428">
          <name>$pointer</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="447" package="IPM\Core\System\Database">
        <name>eXquery</name>
        <full_name>eXquery</full_name>
        <docblock line="430">
          <description>Submits an SQL statement to the database and keeps a reference to the
query's postion within the history array
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="430" name="param" description="Reference ID used to retrieve the results" type="String" variable="$refid">
            <type by_reference="false">String</type>
          </tag>
          <tag line="430" name="param" description="Query to execute" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="430" name="param" description="Values to replace the tokens with or custom callback&#13;&#10;function, see the &lt;u&gt;$callback&lt;/u&gt; parameter for detauls on closures.  If&#13;&#10;a closure is passed instead of a token array, the &lt;u&gt;$callback&lt;/u&gt; parameter&#13;&#10;will not be processed." type="Mixed" variable="$tokens">
            <type by_reference="false">Mixed</type>
          </tag>
          <tag line="430" name="param" description="Custom callback function.  Callbacks are passed&#13;&#10;the following parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;results&lt;/b&gt; An array containing the results of the query&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;query&lt;/b&gt; An object containing the defaults of the query&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="430" name="return" description="Array of the result set or the return of a passed callback" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="447">
          <name>$refid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="447">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="447">
          <name>$tokens</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="447">
          <name>$callback</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="447">
          <name>$params</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="469" package="IPM\Core\System\Database">
        <name>eXresults</name>
        <full_name>eXresults</full_name>
        <docblock line="459">
          <description>Returns the results of the SQL statement in the history postion identified
by the given &lt;i&gt;$refid&lt;/i&gt;
&lt;p&gt;Note: table engine instances cannot return the MySQL result resource,
only the result array is allowed to be retrieved&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="459" name="param" description="Reference ID used to retrieve the results" type="String" variable="$refid">
            <type by_reference="false">String</type>
          </tag>
          <tag line="459" name="param" description="(Optional) Type of results to return (array or resource),&#13;&#10;defaults to resource" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="return" description="MySQL result resource or array" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="469">
          <name>$refid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="469">
          <name>$type</name>
          <default>"resource"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="480" package="IPM\Core\System\Database">
        <name>eXrowcount</name>
        <full_name>eXrowcount</full_name>
        <docblock line="474">
          <description>Returns the count of rows for the query at the position of the history
array specified by the given reference ID</description>
          <long-description></long-description>
          <tag line="474" name="param" description="Reference ID used to retrieve the results" type="String" variable="$refid">
            <type by_reference="false">String</type>
          </tag>
          <tag line="474" name="return" description="The row count" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$refid</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="492" package="IPM\Core\System\Database">
        <name>eXresreset</name>
        <full_name>eXresreset</full_name>
        <docblock line="485">
          <description>Resets pointer back to specified point of the query in the position of the
history array specified by the given reference id</description>
          <long-description></long-description>
          <tag line="485" name="param" description="Reference ID used to retrieve the results" type="String" variable="$refid">
            <type by_reference="false">String</type>
          </tag>
          <tag line="485" name="param" description="(Optional) Position in the result set to reset to, defaults to 0" type="Integer" variable="$pointer">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="485" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="492">
          <name>$refid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="492">
          <name>$pointer</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ipm.class.db.php</error>
      <error line="135" code="50010">No DocBlock was found for method IS_SET()</error>
      <error line="136" code="50010">No DocBlock was found for method SET_BIT()</error>
      <error line="137" code="50010">No DocBlock was found for method REMOVE_BIT()</error>
      <error line="138" code="50010">No DocBlock was found for method TOGGLE_BIT()</error>
      <error line="309" code="50010">No DocBlock was found for method __get()</error>
      <error line="430" code="50015">Argument $params is missing from the Docblock of eXquery()</error>
    </parse_markers>
  </file>
  <file path="ipm.class.db.engine.php" hash="8be9a2d2b1e54e3ec727e4fd25e5597b" package="Default">
    <include line="2" type="Include Once" package="Default">
      <name>ipm.class.db.engine.basic.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="21" package="IPM\Core\System\Database">
      <extends>\aIPM_db_engine</extends>
      <name>IPM_db_engine</name>
      <full_name>\IPM_db_engine</full_name>
      <docblock line="14">
        <description>IPM Database Engine</description>
        <long-description>&lt;p&gt;Note: this is an abstraction and cannot be created directly&lt;/p&gt;</long-description>
        <tag line="14" name="package" description="IPM\Core\System\Database"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$templates</name>
        <default>array()</default>
        <docblock line="23">
          <description>An array of query templates</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$queue</name>
        <default>array()</default>
        <docblock line="29">
          <description>Array to hold the query queue</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="Array">
            <type by_reference="false">Array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="IPM\Core\System\Database">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="35">
          <description>Opens/creates a connection to the database
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="35" name="param" description="User name" type="String" variable="$user">
            <type by_reference="false">String</type>
          </tag>
          <tag line="35" name="param" description="Password" type="String" variable="$pass">
            <type by_reference="false">String</type>
          </tag>
          <tag line="35" name="param" description="Server host name/IP" type="String" variable="$host">
            <type by_reference="false">String</type>
          </tag>
          <tag line="35" name="return" description="True is connection created" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$user</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$pass</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="IPM\Core\System\Database">
        <name>setdb</name>
        <full_name>setdb</full_name>
        <docblock line="48">
          <description>Sets the current database as active
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="48" name="param" description="Database name" type="String" variable="$db">
            <type by_reference="false">String</type>
          </tag>
          <tag line="48" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$db</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="IPM\Core\System\Database">
        <name>setvar</name>
        <full_name>setvar</full_name>
        <docblock line="58">
          <description>Sets session variables for current database connection
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="58" name="param" description="Session variable to set" type="String" variable="$dbvar">
            <type by_reference="false">String</type>
          </tag>
          <tag line="58" name="param" description="Value to assign to the session variable" type="String" variable="$value">
            <type by_reference="false">String</type>
          </tag>
          <tag line="58" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$variable</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="IPM\Core\System\Database">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="69">
          <description>Closes the current database connection
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="IPM\Core\System\Database">
        <name>clearQueue</name>
        <full_name>clearQueue</full_name>
        <docblock line="77">
          <description>Clears the active queue
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="IPM\Core\System\Database">
        <name>addQuery</name>
        <full_name>addQuery</full_name>
        <docblock line="86">
          <description>Adds a query to the query queue
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="86" name="param" description="The query to add to the queue" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="86" name="param" description="(Optional) An array of name/value pairs used to compile the query or template" type="Array" variable="$tokens">
            <type by_reference="false">Array</type>
          </tag>
          <tag line="86" name="param" description="Function to execute once data has been returned, not fully implimented" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$tokens</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="93">
          <name>$callback</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="IPM\Core\System\Database">
        <name>runQueue</name>
        <full_name>runQueue</full_name>
        <docblock line="118">
          <description>Executes all queries in the queue.</description>
          <long-description>&lt;p&gt;Any values returned by a query will be passed as tokens to
the next executing query.  Each time data is returned, it is merged into the tokens from the previous
query before passed to the next.  In this way, all values can be passed instead of just the last.&lt;br&gt;&lt;br&gt;
Note: Not permitted on table engine instances&lt;/p&gt;</long-description>
          <tag line="118" name="param" description="(Optional) Function to execute once all queries in the queue have been executed." type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="118" name="return" description="Returns an array containing the result of the final query in the queue, or the&#13;&#10;result of the callback." type="Array">
            <type by_reference="false">Array</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$callback</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="IPM\Core\System\Database">
        <name>addTemplate</name>
        <full_name>addTemplate</full_name>
        <docblock line="147">
          <description>Adds a query template.</description>
          <long-description>&lt;p&gt;Query templates can be defined using "tokens" that will be replaced
with field/value pairs durring query execution.  Templates can also be defined with a default
callback to be executed on the result object.&lt;br&gt;&lt;br&gt;
Note: Not permitted on table engine instances&lt;/p&gt;</long-description>
          <tag line="147" name="param" description="Query template identifier, used in templates object hash" type="String" variable="$name">
            <type by_reference="false">String</type>
          </tag>
          <tag line="147" name="param" description="The query template" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="147" name="param" description="Function to execute once data has been returned" type="\Closure" variable="$callback">
            <type by_reference="false">\Closure</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$callback</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="IPM\Core\System\Database">
        <name>isTemplate</name>
        <full_name>isTemplate</full_name>
        <docblock line="165">
          <description>Determine if the named value is a registered template
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="165" name="param" description="Query template identifier, used in templates object hash" type="String" variable="$name">
            <type by_reference="false">String</type>
          </tag>
          <tag line="165" name="return" description="True if the name is defined in the templates object hash" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="IPM\Core\System\Database">
        <name>compileTemplate</name>
        <full_name>compileTemplate</full_name>
        <docblock line="176">
          <description>Compiles a query template with the values in the tokens object
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="176" name="param" description="Query template identifier, used in templates object hash" type="String" variable="$name">
            <type by_reference="false">String</type>
          </tag>
          <tag line="176" name="param" description="Values to replace the tokens with" type="\{Object}" variable="$tokens">
            <type by_reference="false">\{Object}</type>
          </tag>
          <tag line="176" name="return" description="The compiled template" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="183">
          <name>$tokens</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="IPM\Core\System\Database">
        <name>compileQuery</name>
        <full_name>compileQuery</full_name>
        <docblock line="195">
          <description>Compiles a query with the values in the tokens object
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="195" name="param" description="Query to compile" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="195" name="param" description="Values to replace the tokens with" type="Array" variable="$tokens">
            <type by_reference="false">Array</type>
          </tag>
          <tag line="195" name="return" description="The compiled query" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="202">
          <name>$tokens</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="217" package="IPM\Core\System\Database">
        <name>hasCallback</name>
        <full_name>hasCallback</full_name>
        <docblock line="213">
          <description>Returns the callback from a named template</description>
          <long-description></long-description>
          <tag line="213" name="param" description="The name of the template" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="223" package="IPM\Core\System\Database">
        <name>getTemplateCallback</name>
        <full_name>getTemplateCallback</full_name>
        <docblock line="219">
          <description>Alias of &lt;i&gt;hasCallback&lt;/i&gt;</description>
          <long-description></long-description>
          <tag line="219" name="param" description="The name of the template" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="IPM\Core\System\Database">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="225">
          <description>Submits an SQL statement to the database
&lt;p&gt;Note: Not permitted on table engine instances&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="225" name="param" description="Query to execute" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="225" name="param" description="Values to replace the tokens with or custom callback&#13;&#10;function, see the &lt;u&gt;$callback&lt;/u&gt; parameter for detauls on closures.  If&#13;&#10;a closure is passed instead of a token array, the &lt;u&gt;$callback&lt;/u&gt; parameter&#13;&#10;will not be processed." type="Mixed" variable="$tokens">
            <type by_reference="false">Mixed</type>
          </tag>
          <tag line="225" name="param" description="Custom callback function.  Callbacks are passed&#13;&#10;the following parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;results&lt;/b&gt; An array containing the results of the query&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;query&lt;/b&gt; An object containing the defaults of the query&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="\Closure" variable="$closure">
            <type by_reference="false">\Closure</type>
          </tag>
          <tag line="225" name="param" description="(Optional) A parameter to pass into the callback.&#13;&#10;Note: parameter pass by reference." type="mixed" variable="$closureParams">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="225" name="return" description="Array of the result set or the return of a passed callback" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$tokens</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="242">
          <name>$closure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="242">
          <name>$closureParams</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="275" package="IPM\Core\System\Database">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="267">
          <description>Returns the results of the last successfully executed SQL statement
&lt;p&gt;Note: table engine instances cannot return the MySQL result resource,
only the result array is allowed to be retrieved&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="267" name="param" description="(Optional) Type of results to return (array or resource),&#13;&#10;defaults to array" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="267" name="return" description="MySQL result resource" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$type</name>
          <default>"array"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="292" package="IPM\Core\System\Database">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="279">
          <description>Insert a record into the database by generating a safe query using provided
parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="279" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="279" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="279" name="return" description="The ID of the insert statement if the table has an auto&#13;&#10;incremeted field or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="292">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="292">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="309" package="IPM\Core\System\Database">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="296">
          <description>Update a record in the database by generating a safe query using provided
parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="296" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="296" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="296" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="IPM\Core\System\Database">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="313">
          <description>Select records from the database by generating a safe query using provided
parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="313" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;options&lt;/b&gt; (Optional) An array with various options for the query.  As follows&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;order&lt;/b&gt; The field to order by or an array containing the &lt;u&gt;fields&lt;/u&gt; and &lt;u&gt;dir&lt;/u&gt;ection to sort&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;limit&lt;/b&gt; The number of records to query or an array containing the &lt;u&gt;start&lt;/u&gt; and &lt;u&gt;length&lt;/u&gt;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;group&lt;/b&gt; The field to group by&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="313" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="313" name="return" description="The result array from the executed query or the compiled query" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="331">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="347" package="IPM\Core\System\Database">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="335">
          <description>Delete a set of records from the database by generating a safe query using
provided parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="335" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="335" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="335" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="347">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="347">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="376" package="IPM\Core\System\Database">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="351">
          <description>Create a table in the database by generating a safe query using provided
parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="351" name="param" description="An array of table configuration to build the query.&#13;&#10;The following are valid&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;role&lt;/b&gt; The type of table or role the table in the table will have&#13;&#10;(system, content, modules), used in the naming of the table&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;primarykey&lt;/b&gt; field to use as the primary key&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of field descriptions, each index should be an&#13;&#10;array withhave the following:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;name&lt;/b&gt; name of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;type&lt;/b&gt; valid database field type&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;length&lt;/b&gt; the length of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;null&lt;/b&gt; (bool) is null&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;default&lt;/b&gt; default value of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;charset&lt;/b&gt; character set&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;collate&lt;/b&gt; collation&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;auto&lt;/b&gt; auto increment field&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&#13;&#10;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="351" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="351" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="376">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file ipm.class.db.engine.php</error>
      <error line="58" code="50014">Name of argument $variable does not match with the DocBlock's name $dbvar in setvar()</error>
      <notice line="58" code="50013">Parameter $dbvar could not be found in setvar()</notice>
    </parse_markers>
  </file>
  <file path="ipm.class.db.engine.basic.php" hash="199a62490ac61b159f9650cd744e983a" package="IPM\Core\System\Database">
    <docblock line="2">
      <description>IPM Database Class</description>
      <long-description>&lt;p&gt;Database Class Subsystem&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Aaron Snyder &lt;aaron.snyder@hki.com&gt;"/>
      <tag line="2" name="date" description="2013-01-24"/>
      <tag line="2" name="version" description="1.8.x"/>
      <tag line="2" name="revision" description="460921"/>
      <tag line="2" name="package" description="IPM\Core\System\Database"/>
    </docblock>
    <include line="106" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="24" package="IPM\Core\System\Database">
      <extends/>
      <name>aIPM_db_engine</name>
      <full_name>\aIPM_db_engine</full_name>
      <docblock line="13">
        <description>IPM Database Basic Engine</description>
        <long-description>&lt;p&gt;This engine should only be instantiated as a table engine instance.  Any
noral database class should extend or instantiate the full engine, which
extends this class.&lt;/p&gt;

&lt;p&gt;Note: this is an abstraction and cannot be created directly&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="IPM\Core\System\Database"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$conn</name>
        <default>false</default>
        <docblock line="26">
          <description>The database connection resource.</description>
          <long-description>&lt;p&gt;The class, table engines spawned from
this class, and plugin all share the same connection resource which is
opened through the plugin.&lt;/p&gt;</long-description>
          <tag line="26" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$plugin</name>
        <default>false</default>
        <docblock line="34">
          <description>Database plugin that will peform the actual database communication</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="\IPM_db_plugin">
            <type by_reference="false">\IPM_db_plugin</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$pluginType</name>
        <default>false</default>
        <docblock line="40">
          <description>Name of database plugin to use</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$defaultPlugin</name>
        <default>"mysql"</default>
        <docblock line="46">
          <description>Name of the default database plugin, use if no plugin type is specified
durring class instnatianation</description>
          <long-description></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$tableConfig</name>
        <default>false</default>
        <docblock line="53">
          <description>Possible table configuration, used if this class is instantiated as a
table engine</description>
          <long-description></long-description>
          <tag line="53" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$saveHistory</name>
        <default>false</default>
        <docblock line="60">
          <description>Sets the ability to save to the query history after every execution</description>
          <long-description></long-description>
          <tag line="60" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="70" namespace="global" package="Default">
        <name>$history</name>
        <default>array()</default>
        <docblock line="66">
          <description>Holds a history of all queries processed by this engine</description>
          <long-description></long-description>
          <tag line="66" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="IPM\Core\System\Database">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="72">
          <description>Constructor - automatically loads the database plugin and opens a
connection to the database if the server connections settings are set in
the constructor config parameter array.</description>
          <long-description></long-description>
          <tag line="72" name="param" description="The database plugin to load or an array containing&#13;&#10;the plugin and connection settings" type="mixed" variable="$params">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="72" name="param" description="The connection can be passed through the engine to&#13;&#10;the plugin when this class is instantiated as a table engine in order to&#13;&#10;share the same connection as the parent class" type="resource" variable="$conn">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="72" name="constructor" description=""/>
        </docblock>
        <argument line="83">
          <name>$params</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="83">
          <name>$conn</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="102" package="IPM\Core\System\Database">
        <name>loadPlugin</name>
        <full_name>loadPlugin</full_name>
        <docblock line="96">
          <description>Loads a database plugin.</description>
          <long-description></long-description>
          <tag line="96" name="param" description="Name of the database plugin" type="string" variable="$plugin">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="(Optional) Path to the database plugin class file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="True if the plugin was loaded successfully, false on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$plugin</name>
          <default></default>
          <type/>
        </argument>
        <argument line="102">
          <name>$path</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="115" package="IPM\Core\System\Database">
        <name>toggleHistory</name>
        <full_name>toggleHistory</full_name>
        <argument line="115">
          <name>$set</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="IPM\Core\System\Database">
        <name>setPlugin</name>
        <full_name>setPlugin</full_name>
        <docblock line="119">
          <description>Loads a database plugin.</description>
          <long-description>&lt;p&gt;Ensures that it doesn't reload the currently
loaded plugin&lt;/p&gt;</long-description>
          <tag line="119" name="param" description="Name of the database plugin" type="string" variable="$plugin">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="True if the plugin was loaded successfully, false on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$plugin</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="IPM\Core\System\Database">
        <name>resetPlugin</name>
        <full_name>resetPlugin</full_name>
        <docblock line="130">
          <description>Resets the database plugin to the default plugin type</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="IPM\Core\System\Database">
        <name>setTableConfig</name>
        <full_name>setTableConfig</full_name>
        <docblock line="135">
          <description>Sets table configuration.</description>
          <long-description>&lt;p&gt;This determines if the instance of this class
will be used as a table engine.  Database engines have restricted
functionality&lt;/p&gt;</long-description>
          <tag line="135" name="param" description="Table config array" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="147" package="IPM\Core\System\Database">
        <name>getTableConfig</name>
        <full_name>getTableConfig</full_name>
        <docblock line="143">
          <description>Return the table configuration if this class is instantiated as a table engine</description>
          <long-description></long-description>
          <tag line="143" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="IPM\Core\System\Database">
        <name>setDefaults</name>
        <full_name>setDefaults</full_name>
        <docblock line="151">
          <description>Sets the default table creation values</description>
          <long-description></long-description>
          <tag line="151" name="param" description="Defaults object, could also be an array" type="mixed" variable="$defaults">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$defaults</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="IPM\Core\System\Database">
        <name>getDefaults</name>
        <full_name>getDefaults</full_name>
        <docblock line="157">
          <description>Returns the default table creatoin values as an object</description>
          <long-description></long-description>
          <tag line="157" name="params" description="string $option (Optional) Returns the value for the specified option,&#13;&#10;if empty will return all default values"/>
          <tag line="157" name="return" description="Requested value or default value object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$option</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="IPM\Core\System\Database">
        <name>getdb</name>
        <full_name>getdb</full_name>
        <docblock line="165">
          <description>Returns the name of the current active database</description>
          <long-description></long-description>
          <tag line="165" name="return" description="Database name, false if a database is not selected" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="IPM\Core\System\Database">
        <name>connected</name>
        <full_name>connected</full_name>
        <docblock line="171">
          <description>Returns current connection status</description>
          <long-description></long-description>
          <tag line="171" name="return" description="True if connected" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="IPM\Core\System\Database">
        <name>insert_id</name>
        <full_name>insert_id</full_name>
        <docblock line="177">
          <description>Returns the auto incremeted ID generated by the last insert query</description>
          <long-description></long-description>
          <tag line="177" name="return" description="Insert ID" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="IPM\Core\System\Database">
        <name>real_escape_string</name>
        <full_name>real_escape_string</full_name>
        <docblock line="183">
          <description>Escapes the variable to make it safe to use in a query</description>
          <long-description></long-description>
          <tag line="183" name="param" description="The variable to escape" type="String" variable="$var">
            <type by_reference="false">String</type>
          </tag>
          <tag line="183" name="return" description="The escaped string" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$var</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="IPM\Core\System\Database">
        <name>getQuery</name>
        <full_name>getQuery</full_name>
        <docblock line="190">
          <description>Returns the last query executed</description>
          <long-description></long-description>
          <tag line="190" name="param" description="(Optional) Reference to the query in the query history" type="String" variable="$refid">
            <type by_reference="false">String</type>
          </tag>
          <tag line="190" name="return" description="The last query executed" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$refid</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="IPM\Core\System\Database">
        <name>getLastQuery</name>
        <full_name>getLastQuery</full_name>
        <argument line="200">
          <name>$refid</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="209" package="IPM\Core\System\Database">
        <name>getHistory</name>
        <full_name>getHistory</full_name>
        <docblock line="204">
          <description>Returns the query history</description>
          <long-description></long-description>
          <tag line="204" name="param" description="(Optional) Reference to the query in the query history,&#13;&#10;if not supplied then the entire query history will be returned" type="String" variable="$refid">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$refid</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="222" package="IPM\Core\System\Database">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="214">
          <description>Returns the results of the last successfully executed SQL statement
&lt;p&gt;Note: table engine instances cannot return the MySQL result resource,
only the result array is allowed to be retrieved&lt;/p&gt;</description>
          <long-description></long-description>
          <tag line="214" name="param" description="(Optional) Type of results to return (array or resource),&#13;&#10;defaults to array" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="return" description="MySQL result resource" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$type</name>
          <default>"array"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="IPM\Core\System\Database">
        <name>result</name>
        <full_name>result</full_name>
        <docblock line="226">
          <description>Returns the current result set for the last successfully run sql statement</description>
          <long-description></long-description>
          <tag line="226" name="param" description="Row to move the pointer to" type="Integer" variable="$row">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="226" name="param" description="(Optional) Field to get the data from, defaults to 0 or the first field" type="mixed" variable="$field">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="226" name="return" description="Contents of specified field or false on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$row</name>
          <default></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$field</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="IPM\Core\System\Database">
        <name>num_rows</name>
        <full_name>num_rows</full_name>
        <docblock line="234">
          <description>Returns the number of rows for the last run select statement</description>
          <long-description></long-description>
          <tag line="234" name="return" description="The count" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="IPM\Core\System\Database">
        <name>affected_rows</name>
        <full_name>affected_rows</full_name>
        <docblock line="240">
          <description>Returns the number of rows affected for the last run update statement</description>
          <long-description></long-description>
          <tag line="240" name="return" description="The count" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="IPM\Core\System\Database">
        <name>errno</name>
        <full_name>errno</full_name>
        <docblock line="246">
          <description>Returns the error code generated for the last executed query</description>
          <long-description></long-description>
          <tag line="246" name="return" description="Error code, 0 if no error" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="256" package="IPM\Core\System\Database">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="252">
          <description>Returns the error generated for the last executed query</description>
          <long-description></long-description>
          <tag line="252" name="return" description="Error string or false" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="263" package="IPM\Core\System\Database">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="258">
          <description>Resets the pointer in the MySQL result set</description>
          <long-description></long-description>
          <tag line="258" name="param" description="(Optional) Position in the result set to reset to, defaults to 0" type="Integer" variable="$pointer">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="258" name="return" description="True on success, MySQL error number on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$pointer</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="278" package="IPM\Core\System\Database">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="265">
          <description>Insert a record into the database by generating a safe query using provided
parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="265" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="265" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="265" name="return" description="The ID of the insert statement if the table has an auto&#13;&#10;incremeted field or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="278">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="IPM\Core\System\Database">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="283">
          <description>Update a record in the database by generating a safe query using provided
parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="283" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="283" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="283" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="319" package="IPM\Core\System\Database">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="301">
          <description>Select records from the database by generating a safe query using provided
parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="301" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;options&lt;/b&gt; (Optional) An array with various options for the query.  As follows&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;order&lt;/b&gt; The field to order by or an array containing the &lt;u&gt;fields&lt;/u&gt; and &lt;u&gt;dir&lt;/u&gt;ection to sort&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;limit&lt;/b&gt; The number of records to query or an array containing the &lt;u&gt;start&lt;/u&gt; and &lt;u&gt;length&lt;/u&gt;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;group&lt;/b&gt; The field to group by&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="301" name="return" description="The result array from the executed query or the compiled query" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="319">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="319">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="IPM\Core\System\Database">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="324">
          <description>Delete a set of records from the database by generating a safe query using
provided parameter array.</description>
          <long-description>&lt;p&gt;Note: table engine instances cannot specifiy table&lt;/p&gt;</long-description>
          <tag line="324" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="324" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="324" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="336">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="115" code="50010">No DocBlock was found for method toggleHistory()</error>
      <error line="157" code="50015">Argument $option is missing from the Docblock of getDefaults()</error>
      <error line="200" code="50010">No DocBlock was found for method getLastQuery()</error>
    </parse_markers>
  </file>
  <file path="ipm.class.db.plugin.mysql.php" hash="4166618ab1d44bbf018bd00a3a437ed5" package="IPM\Core\System\Database">
    <docblock line="2">
      <description>IPM Database Class</description>
      <long-description>&lt;p&gt;Database Class Subsystem&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Aaron Snyder &lt;aaron.snyder@hki.com&gt;"/>
      <tag line="2" name="date" description="2013-01-24"/>
      <tag line="2" name="version" description="1.8.x"/>
      <tag line="2" name="revision" description="460921"/>
      <tag line="2" name="package" description="IPM\Core\System\Database"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="IPM\Core\System\Database">
      <extends>\aIPM_db_plugin</extends>
      <implements>\iIPM_db_plugin</implements>
      <name>IPM_db_plugin_mysql</name>
      <full_name>\IPM_db_plugin_mysql</full_name>
      <docblock line="13">
        <description>IPM MySQL Database Plugin</description>
        <long-description></long-description>
        <tag line="13" name="package" description="IPM\Core\System\Database"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$sqlarray</name>
        <default>array()</default>
        <docblock line="20">
          <description>Result of the last SQL select state as an array</description>
          <long-description></long-description>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="IPM\Core\System\Database">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Constructor - determines if the MySQL PHP extension is loaded and sets
default connection if passed to the constructor</description>
          <long-description></long-description>
          <tag line="26" name="param" description="(Optional) If there is already and open connection&#13;&#10;to a database, it can be passed into the constructor and the database&#13;&#10;plugin will use it instead of creating it's own." type="resource" variable="$conn">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="26" name="constructor" description=""/>
        </docblock>
        <argument line="34">
          <name>$conn</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="IPM\Core\System\Database">
        <name>setDefaults</name>
        <full_name>setDefaults</full_name>
        <docblock line="39">
          <description>Sets the default table creation values</description>
          <long-description></long-description>
          <tag line="39" name="param" description="Defaults object, could also be an array" type="mixed" variable="$defaults">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$defaults</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="IPM\Core\System\Database">
        <name>getDefaults</name>
        <full_name>getDefaults</full_name>
        <docblock line="48">
          <description>Returns the default table creatoin values as an object</description>
          <long-description></long-description>
          <tag line="48" name="params" description="string $option (Optional) Returns the value for the specified option,&#13;&#10;if empty will return all default values"/>
          <tag line="48" name="return" description="Requested value or default value object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$option</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="IPM\Core\System\Database">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="56">
          <description>Opens/creates a connection to the database</description>
          <long-description></long-description>
          <tag line="56" name="param" description="User name" type="String" variable="$user">
            <type by_reference="false">String</type>
          </tag>
          <tag line="56" name="param" description="Password" type="String" variable="$pass">
            <type by_reference="false">String</type>
          </tag>
          <tag line="56" name="param" description="Server host name/IP" type="String" variable="$host">
            <type by_reference="false">String</type>
          </tag>
          <tag line="56" name="return" description="True is connection created" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$user</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$pass</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="IPM\Core\System\Database">
        <name>setdb</name>
        <full_name>setdb</full_name>
        <docblock line="80">
          <description>Sets the current database as active</description>
          <long-description></long-description>
          <tag line="80" name="param" description="Database name" type="String" variable="$db">
            <type by_reference="false">String</type>
          </tag>
          <tag line="80" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$db</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="IPM\Core\System\Database">
        <name>setvar</name>
        <full_name>setvar</full_name>
        <docblock line="95">
          <description>Sets session variables for current database connection</description>
          <long-description></long-description>
          <tag line="95" name="param" description="Session variable to set" type="String" variable="$dbvar">
            <type by_reference="false">String</type>
          </tag>
          <tag line="95" name="param" description="Value to assign to the session variable" type="String" variable="$value">
            <type by_reference="false">String</type>
          </tag>
          <tag line="95" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$variable</name>
          <default></default>
          <type/>
        </argument>
        <argument line="101">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="IPM\Core\System\Database">
        <name>connected</name>
        <full_name>connected</full_name>
        <docblock line="108">
          <description>Returns current connection status</description>
          <long-description></long-description>
          <tag line="108" name="return" description="True if connected" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="IPM\Core\System\Database">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="117">
          <description>Closes the current database connection</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="IPM\Core\System\Database">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="131">
          <description>Submits an SQL statement to the database</description>
          <long-description></long-description>
          <tag line="131" name="param" description="Query to execute" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="131" name="return" description="Array of the result set or the return of a passed callback" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="IPM\Core\System\Database">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="181">
          <description>Returns the results of the last successfully executed SQL statement</description>
          <long-description></long-description>
          <tag line="181" name="param" description="(Optional) Type of results to return (array or resource),&#13;&#10;defaults to array" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="return" description="MySQL result resource" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$type</name>
          <default>"array"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="IPM\Core\System\Database">
        <name>result</name>
        <full_name>result</full_name>
        <docblock line="195">
          <description>Returns the current result set for the last successfully run sql statement</description>
          <long-description></long-description>
          <tag line="195" name="param" description="Row to move the pointer to" type="Integer" variable="$row">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="195" name="param" description="(Optional) Field to get the data from, defaults to 0 or the first field" type="mixed" variable="$field">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="195" name="return" description="Contents of specified field or false on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="195" name="todo" description="Move the commented &lt;i&gt;result&lt;/i&gt; function the mysqli plugin"/>
        </docblock>
        <argument line="202">
          <name>$row</name>
          <default></default>
          <type/>
        </argument>
        <argument line="202">
          <name>$field</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="IPM\Core\System\Database">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="216">
          <description>Resets the pointer in the MySQL result set</description>
          <long-description></long-description>
          <tag line="216" name="param" description="(Optional) Position in the result set to reset to, defaults to 0" type="Integer" variable="$pointer">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="216" name="return" description="True on success, MySQL error number on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$pointer</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="234" package="IPM\Core\System\Database">
        <name>returnArray</name>
        <full_name>returnArray</full_name>
        <docblock line="230">
          <description>Converts a MySQL data set to a standard php array</description>
          <long-description></long-description>
          <tag line="230" name="return" description="An array with all records of the result set or fales on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="252" package="IPM\Core\System\Database">
        <name>real_escape_string</name>
        <full_name>real_escape_string</full_name>
        <docblock line="247">
          <description>Escapes the variable to make it safe to use in a query</description>
          <long-description></long-description>
          <tag line="247" name="param" description="The variable to escape" type="String" variable="$var">
            <type by_reference="false">String</type>
          </tag>
          <tag line="247" name="return" description="The escaped string" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="252">
          <name>$var</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="262" package="IPM\Core\System\Database">
        <name>createInsert</name>
        <full_name>createInsert</full_name>
        <docblock line="256">
          <description>Compiles an insert query for safe execution</description>
          <long-description></long-description>
          <tag line="256" name="param" description="The table to perform the query on" type="string" variable="$tablename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="param" description="An array of table fields/value pairs" type="array" variable="$vars">
            <type by_reference="false">array</type>
          </tag>
          <tag line="256" name="return" description="The compiled query" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$tablename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$vars</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="298" package="IPM\Core\System\Database">
        <name>createUpdate</name>
        <full_name>createUpdate</full_name>
        <docblock line="291">
          <description>Compiles an update query for safe execution</description>
          <long-description></long-description>
          <tag line="291" name="param" description="The table to perform the query on" type="string" variable="$tablename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="291" name="param" description="An array of table fields/value pairs to update the record with" type="array" variable="$vars">
            <type by_reference="false">array</type>
          </tag>
          <tag line="291" name="param" description="(Optional) An array of table fields/value pairs to use as the where clause" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="291" name="return" description="The compiled query" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="298">
          <name>$tablename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="298">
          <name>$vars</name>
          <default></default>
          <type/>
        </argument>
        <argument line="298">
          <name>$where</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="346" package="IPM\Core\System\Database">
        <name>createSelect</name>
        <full_name>createSelect</full_name>
        <docblock line="334">
          <description>Compiles a select query for safe execution</description>
          <long-description></long-description>
          <tag line="334" name="param" description="The table to perform the query on" type="string" variable="$tablename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="param" description="(Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;" type="array" variable="$fieldlist">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="param" description="(Optional) An array of table fields/value pairs to use as the where clause" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="param" description="(Optional) An array with various options for the query.  As follows&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;order&lt;/b&gt; The field to order by or an array containing the &lt;u&gt;fields&lt;/u&gt; and &lt;u&gt;dir&lt;/u&gt;ection to sort&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;limit&lt;/b&gt; The number of records to query or an array containing the &lt;u&gt;start&lt;/u&gt; and &lt;u&gt;length&lt;/u&gt;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;group&lt;/b&gt; The field to group by&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="return" description="The compiled query" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$tablename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$fieldlist</name>
          <default>"*"</default>
          <type/>
        </argument>
        <argument line="346">
          <name>$where</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="346">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="415" package="IPM\Core\System\Database">
        <name>createDelete</name>
        <full_name>createDelete</full_name>
        <docblock line="409">
          <description>Compiles a delete query for safe execution</description>
          <long-description></long-description>
          <tag line="409" name="param" description="The table to perform the query on" type="string" variable="$tablename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="409" name="param" description="An array of table fields/value pairs to use as the where clause" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="409" name="return" description="The compiled query or false if no where clause array has no values" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="415">
          <name>$tablename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="415">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="467" package="IPM\Core\System\Database">
        <name>createCreate</name>
        <full_name>createCreate</full_name>
        <docblock line="444">
          <description>Compiles a create table query for safe execution</description>
          <long-description></long-description>
          <tag line="444" name="param" description="The table to perform the query on" type="string" variable="$tablename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="444" name="param" description="An array of table configuration to build the query.&#13;&#10;The following are valid&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;role&lt;/b&gt; The type of table or role the table in the table will have&#13;&#10;(system, content, modules), used in the naming of the table&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;primarykey&lt;/b&gt; field to use as the primary key&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of field descriptions, each index should be an&#13;&#10;array withhave the following:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;name&lt;/b&gt; name of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;type&lt;/b&gt; valid database field type&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;length&lt;/b&gt; the length of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;null&lt;/b&gt; (bool) is null&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;default&lt;/b&gt; default value of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;charset&lt;/b&gt; character set&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;collate&lt;/b&gt; collation&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;auto&lt;/b&gt; auto increment field&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&#13;&#10;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="444" name="return" description="The compiled query" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="467">
          <name>$tablename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="467">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="541" package="IPM\Core\System\Database">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="528">
          <description>Insert a record into the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="528" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="528" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="528" name="return" description="The ID of the insert statement if the table has an auto&#13;&#10;incremeted field or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="541">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="541">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="567" package="IPM\Core\System\Database">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="554">
          <description>Update a record in the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="554" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="554" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="554" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="567">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="567">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="598" package="IPM\Core\System\Database">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="580">
          <description>Select records from the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="580" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;options&lt;/b&gt; (Optional) An array with various options for the query.  As follows&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;order&lt;/b&gt; The field to order by or an array containing the &lt;u&gt;fields&lt;/u&gt; and &lt;u&gt;dir&lt;/u&gt;ection to sort&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;limit&lt;/b&gt; The number of records to query or an array containing the &lt;u&gt;start&lt;/u&gt; and &lt;u&gt;length&lt;/u&gt;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;group&lt;/b&gt; The field to group by&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="580" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="580" name="return" description="The result array from the executed query or the compiled query" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="598">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="598">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="621" package="IPM\Core\System\Database">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="609">
          <description>Delete a set of records from the database by generating a safe query using
provided parameter array</description>
          <long-description></long-description>
          <tag line="609" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="609" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="609" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="621">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="621">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="658" package="IPM\Core\System\Database">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="633">
          <description>Create a table in the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="633" name="param" description="An array of table configuration to build the query.&#13;&#10;The following are valid&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;role&lt;/b&gt; The type of table or role the table in the table will have&#13;&#10;(system, content, modules), used in the naming of the table&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;primarykey&lt;/b&gt; field to use as the primary key&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of field descriptions, each index should be an&#13;&#10;array withhave the following:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;name&lt;/b&gt; name of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;type&lt;/b&gt; valid database field type&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;length&lt;/b&gt; the length of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;null&lt;/b&gt; (bool) is null&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;default&lt;/b&gt; default value of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;charset&lt;/b&gt; character set&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;collate&lt;/b&gt; collation&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;auto&lt;/b&gt; auto increment field&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&#13;&#10;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="633" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="633" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="658">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="658">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="48" code="50015">Argument $option is missing from the Docblock of getDefaults()</error>
      <error line="95" code="50014">Name of argument $variable does not match with the DocBlock's name $dbvar in setvar()</error>
      <notice line="95" code="50013">Parameter $dbvar could not be found in setvar()</notice>
    </parse_markers>
  </file>
  <file path="ipm.interface.db.plugin.php" hash="c3a397eaaee737056dcd39d98d859a5c" package="IPM\Core\System\Database">
    <docblock line="2">
      <description>IPM Database Class</description>
      <long-description>&lt;p&gt;Database Class Subsystem&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Aaron Snyder &lt;aaron.snyder@hki.com&gt;"/>
      <tag line="2" name="date" description="2013-01-24"/>
      <tag line="2" name="version" description="1.8.x"/>
      <tag line="2" name="revision" description="460921"/>
      <tag line="2" name="package" description="IPM\Core\System\Database"/>
    </docblock>
    <interface namespace="global" line="18" package="IPM\Core\System\Database">
      <name>iIPM_db_plugin</name>
      <full_name>\iIPM_db_plugin</full_name>
      <docblock line="13">
        <description>IPM Database Plugin Interface</description>
        <long-description></long-description>
        <tag line="13" name="package" description="IPM\Core\System\Database"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="IPM\Core\System\Database">
        <name>setDefaults</name>
        <full_name>setDefaults</full_name>
        <docblock line="19">
          <description>Sets the default table creation values</description>
          <long-description></long-description>
          <tag line="19" name="param" description="Defaults object, could also be an array" type="mixed" variable="$defaults">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$defaults</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="IPM\Core\System\Database">
        <name>getDefaults</name>
        <full_name>getDefaults</full_name>
        <docblock line="25">
          <description>Returns the default table creatoin values as an object</description>
          <long-description></long-description>
          <tag line="25" name="params" description="string $option (Optional) Returns the value for the specified option,&#13;&#10;if empty will return all default values"/>
          <tag line="25" name="return" description="Requested value or default value object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$varname</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="IPM\Core\System\Database">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="33">
          <description>Opens/creates a connection to the database</description>
          <long-description></long-description>
          <tag line="33" name="param" description="User name" type="String" variable="$user">
            <type by_reference="false">String</type>
          </tag>
          <tag line="33" name="param" description="Password" type="String" variable="$pass">
            <type by_reference="false">String</type>
          </tag>
          <tag line="33" name="param" description="Server host name/IP" type="String" variable="$host">
            <type by_reference="false">String</type>
          </tag>
          <tag line="33" name="return" description="True is connection created" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$user</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$pass</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="IPM\Core\System\Database">
        <name>setdb</name>
        <full_name>setdb</full_name>
        <docblock line="42">
          <description>Sets the current database as active</description>
          <long-description></long-description>
          <tag line="42" name="param" description="Database name" type="String" variable="$db">
            <type by_reference="false">String</type>
          </tag>
          <tag line="42" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$db</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="IPM\Core\System\Database">
        <name>setvar</name>
        <full_name>setvar</full_name>
        <docblock line="49">
          <description>Sets session variables for current database connection</description>
          <long-description></long-description>
          <tag line="49" name="param" description="Session variable to set" type="String" variable="$dbvar">
            <type by_reference="false">String</type>
          </tag>
          <tag line="49" name="param" description="Value to assign to the session variable" type="String" variable="$value">
            <type by_reference="false">String</type>
          </tag>
          <tag line="49" name="return" description="True on success" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$variable</name>
          <default></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="IPM\Core\System\Database">
        <name>connected</name>
        <full_name>connected</full_name>
        <docblock line="57">
          <description>Returns current connection status</description>
          <long-description></long-description>
          <tag line="57" name="return" description="True if connected" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="IPM\Core\System\Database">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="63">
          <description>Closes the current database connection</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="IPM\Core\System\Database">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="68">
          <description>Submits an SQL statement to the database</description>
          <long-description></long-description>
          <tag line="68" name="param" description="Query to execute" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="68" name="return" description="Array of the result set or the return of a passed callback" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="IPM\Core\System\Database">
        <name>results</name>
        <full_name>results</full_name>
        <docblock line="75">
          <description>Returns the results of the last successfully executed SQL statement</description>
          <long-description></long-description>
          <tag line="75" name="param" description="(Optional) Type of results to return (array or resource),&#13;&#10;defaults to array" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="MySQL result resource" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$type</name>
          <default>"array"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="IPM\Core\System\Database">
        <name>result</name>
        <full_name>result</full_name>
        <docblock line="83">
          <description>Returns the current result set for the last successfully run sql statement</description>
          <long-description></long-description>
          <tag line="83" name="param" description="Row to move the pointer to" type="Integer" variable="$row">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="83" name="param" description="(Optional) Field to get the data from, defaults to 0 or the first field" type="mixed" variable="$field">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="83" name="return" description="Contents of specified field or false on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="83" name="todo" description="Move the commented &lt;i&gt;result&lt;/i&gt; function the mysqli plugin"/>
        </docblock>
        <argument line="90">
          <name>$row</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$field</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="IPM\Core\System\Database">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="92">
          <description>Resets the pointer in the MySQL result set</description>
          <long-description></long-description>
          <tag line="92" name="param" description="(Optional) Position in the result set to reset to, defaults to 0" type="Integer" variable="$pointer">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="92" name="return" description="True on success, MySQL error number on failure" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$pointer</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="IPM\Core\System\Database">
        <name>real_escape_string</name>
        <full_name>real_escape_string</full_name>
        <docblock line="99">
          <description>Escapes the variable to make it safe to use in a query</description>
          <long-description></long-description>
          <tag line="99" name="param" description="The variable to escape" type="String" variable="$var">
            <type by_reference="false">String</type>
          </tag>
          <tag line="99" name="return" description="The escaped string" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$var</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="IPM\Core\System\Database">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="106">
          <description>Insert a record into the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="106" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="106" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="106" name="return" description="The ID of the insert statement if the table has an auto&#13;&#10;incremeted field or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="134" package="IPM\Core\System\Database">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="121">
          <description>Update a record in the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="121" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="121" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="121" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="134">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="IPM\Core\System\Database">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="136">
          <description>Select records from the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="136" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; (Optional) An array of table fields/value pairs to update the record with, defaults to &quot;*&quot;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; (Optional) An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;options&lt;/b&gt; (Optional) An array with various options for the query.  As follows&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;order&lt;/b&gt; The field to order by or an array containing the &lt;u&gt;fields&lt;/u&gt; and &lt;u&gt;dir&lt;/u&gt;ection to sort&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;limit&lt;/b&gt; The number of records to query or an array containing the &lt;u&gt;start&lt;/u&gt; and &lt;u&gt;length&lt;/u&gt;&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;group&lt;/b&gt; The field to group by&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="136" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="136" name="return" description="The result array from the executed query or the compiled query" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="IPM\Core\System\Database">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="156">
          <description>Delete a set of records from the database by generating a safe query using
provided parameter array</description>
          <long-description></long-description>
          <tag line="156" name="param" description="A configuration array containing the following&#13;&#10;parameters:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; The table to perform the query on&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;where&lt;/b&gt; An array of table fields/value pairs to use as the where clause&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="156" name="return" description="The amount of affected rows or the compiled query." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="168">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="IPM\Core\System\Database">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="170">
          <description>Create a table in the database by generating a safe query using provided
parameter array</description>
          <long-description></long-description>
          <tag line="170" name="param" description="An array of table configuration to build the query.&#13;&#10;The following are valid&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;role&lt;/b&gt; The type of table or role the table in the table will have&#13;&#10;(system, content, modules), used in the naming of the table&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;primarykey&lt;/b&gt; field to use as the primary key&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;fields&lt;/b&gt; An array of field descriptions, each index should be an&#13;&#10;array withhave the following:&lt;ul&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;name&lt;/b&gt; name of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;type&lt;/b&gt; valid database field type&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;length&lt;/b&gt; the length of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;null&lt;/b&gt; (bool) is null&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;default&lt;/b&gt; default value of the field&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;charset&lt;/b&gt; character set&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;collate&lt;/b&gt; collation&lt;/li&gt;&#13;&#10;&lt;li&gt;&lt;b&gt;auto&lt;/b&gt; auto increment field&lt;/li&gt;&#13;&#10;&lt;/ul&gt;&#13;&#10;&lt;/li&gt;&#13;&#10;&lt;/ul&gt;" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="170" name="param" description="Set to True to return the compiled query without&#13;&#10;executing it." type="bool" variable="$returnQuery">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="170" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$returnQuery</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </interface>
    <class final="false" abstract="true" namespace="global" line="203" package="IPM\Core\System\Database">
      <extends/>
      <name>aIPM_db_plugin</name>
      <full_name>\aIPM_db_plugin</full_name>
      <docblock line="198">
        <description>IPM Database Plugin Abtraction</description>
        <long-description></long-description>
        <tag line="198" name="package" description="IPM\Core\System\Database"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="208" namespace="global" package="Default">
        <name>$conn</name>
        <default></default>
        <docblock line="204">
          <description>Database connection identifier</description>
          <long-description></long-description>
          <tag line="204" name="type" description="resource"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="214" namespace="global" package="Default">
        <name>$dbsel</name>
        <default>false</default>
        <docblock line="210">
          <description>True if a database has been selected</description>
          <long-description></long-description>
          <tag line="210" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="220" namespace="global" package="Default">
        <name>$database</name>
        <default></default>
        <docblock line="216">
          <description>The currently selected database name</description>
          <long-description></long-description>
          <tag line="216" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="226" namespace="global" package="Default">
        <name>$server</name>
        <default></default>
        <docblock line="222">
          <description>Database Host Name</description>
          <long-description></long-description>
          <tag line="222" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="232" namespace="global" package="Default">
        <name>$username</name>
        <default></default>
        <docblock line="228">
          <description>Database user name</description>
          <long-description></long-description>
          <tag line="228" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="238" namespace="global" package="Default">
        <name>$password</name>
        <default></default>
        <docblock line="234">
          <description>Database password</description>
          <long-description></long-description>
          <tag line="234" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="244" namespace="global" package="Default">
        <name>$sqlresult</name>
        <default></default>
        <docblock line="240">
          <description>Results from the last SQL statement</description>
          <long-description></long-description>
          <tag line="240" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="250" namespace="global" package="Default">
        <name>$defaults</name>
        <default></default>
        <docblock line="246">
          <description>Table defaults for creating new database tables</description>
          <long-description></long-description>
          <tag line="246" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="256" namespace="global" package="Default">
        <name>$extensionLoaded</name>
        <default>false</default>
        <docblock line="252">
          <description>True if the database PHP extension is loaded</description>
          <long-description></long-description>
          <tag line="252" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="262" namespace="global" package="Default">
        <name>$pluginid</name>
        <default>"mysql"</default>
        <docblock line="258">
          <description>Plugin Identification</description>
          <long-description></long-description>
          <tag line="258" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="268" namespace="global" package="Default">
        <name>$errno</name>
        <default>0</default>
        <docblock line="264">
          <description></description>
          <long-description></long-description>
          <tag line="264" name="var" description="Error number returned from latest query" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="274" namespace="global" package="Default">
        <name>$error</name>
        <default>""</default>
        <docblock line="270">
          <description>Error string returned form latest query</description>
          <long-description></long-description>
          <tag line="270" name="var" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="280" namespace="global" package="Default">
        <name>$affected_rows</name>
        <default>0</default>
        <docblock line="276">
          <description>The number of rows affected by the last update query</description>
          <long-description></long-description>
          <tag line="276" name="var" description="" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="286" namespace="global" package="Default">
        <name>$num_rows</name>
        <default>0</default>
        <docblock line="282">
          <description>The row count of the last select statement</description>
          <long-description></long-description>
          <tag line="282" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="292" namespace="global" package="Default">
        <name>$insert_id</name>
        <default>0</default>
        <docblock line="288">
          <description>The auto incremeted ID generated by the last insert query</description>
          <long-description></long-description>
          <tag line="288" name="var" description="" type="Integer">
            <type by_reference="false">Integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="298" namespace="global" package="Default">
        <name>$lastQuery</name>
        <default></default>
        <docblock line="294">
          <description>The last query executed</description>
          <long-description></long-description>
          <tag line="294" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="304" namespace="global" package="Default">
        <name>$prefix</name>
        <default>array("system" =&gt; "system", "content" =&gt; "content", "modules" =&gt; "modules", "default" =&gt; "content")</default>
        <docblock line="300">
          <description>Prefix types or roles for creating database tables</description>
          <long-description></long-description>
          <tag line="300" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="315" namespace="global" package="Default">
        <name>$queue</name>
        <default>array()</default>
        <docblock line="311">
          <description>Array to hold the query queue</description>
          <long-description></long-description>
          <tag line="311" name="var" description="" type="Array">
            <type by_reference="false">Array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="322" namespace="global" package="Default">
        <name>$fieldTypes</name>
        <default>array("NUMERIC" =&gt; array("TINYINT", "SMALLINT", "MEDIUMINT", "INT", "BIGINT", "DECIMAL", "FLOAT", "DOUBLE", "REAL", "BIT", "BOOLEAN", "SERIAL"), "DATETIME" =&gt; array("DATE", "DATETIME", "TIMESTAMP", "TIME", "YEAR"), "STRING" =&gt; array("CHAR", "VARCHAR", "TINYTEXT", "TEXT", "MEDIUMTEXT", "LONGTEXT", "BINARY", "VARBINARY", "TINYBLOB", "MEDIUMBLOB", "BLOB", "LONGBLOB", "ENUM", "SET"), "SPATIAL" =&gt; array("GEOMETRY", "POINT", "LINESTRING", "POLYGON", "MULTIPOINT", "MULTILINESTRING", "MULTIPOLYGON", "GEOMETRYCOLLECTION"))</default>
        <docblock line="317">
          <description>List of field types for creating database tables.</description>
          <long-description>&lt;p&gt;This is used to make
sure that only valid field types are allowed to be created&lt;/p&gt;</long-description>
          <tag line="317" name="type" description="array"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="333" package="IPM\Core\System\Database">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="329">
          <description>Constructor - sets default connection if it exists and initializes defaults</description>
          <long-description></long-description>
          <tag line="329" name="constructor" description=""/>
        </docblock>
        <argument line="333">
          <name>$conn</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="347" package="IPM\Core\System\Database">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="343">
          <description>Returns the plugin identifier</description>
          <long-description></long-description>
          <tag line="343" name="return" description="Plugin ID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="353" package="IPM\Core\System\Database">
        <name>getdb</name>
        <full_name>getdb</full_name>
        <docblock line="349">
          <description>Returns the name of the current active database</description>
          <long-description></long-description>
          <tag line="349" name="return" description="Database name, false if a database is not selected" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="25" code="50015">Argument $varname is missing from the Docblock of getDefaults()</error>
      <error line="49" code="50014">Name of argument $variable does not match with the DocBlock's name $dbvar in setvar()</error>
      <notice line="49" code="50013">Parameter $dbvar could not be found in setvar()</notice>
      <error line="329" code="50015">Argument $conn is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="IPM" full_name="IPM">
    <package name="Core" full_name="IPM\Core">
      <package name="System" full_name="IPM\Core\System">
        <package name="Database" full_name="IPM\Core\System\Database"/>
      </package>
    </package>
  </package>
  <namespace name="global" full_name="global"/>
  <marker count="4">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="5"/>
</project>
